image: golang:1.21.9-alpine3.19@sha256:ed8ce6c22dd111631c062218989d17ab4b46b503cbe9a9cfce1517836e65298a

before_script:
  - echo ':before_script'
  - cat /etc/os-release
  - ls -la
  - echo 'end :before_script'

# Static Application Security Testing (SAST) is a frequently used Application Security (AppSec) tool,
# which scans an applicationâ€™s source, binary, or byte code.
# https://www.microfocus.com/en-us/what-is/sast
include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - test
  - build
  - deploy

# See CGO_ENABLED issue: https://github.com/golang/go/issues/27303
test:
  stage: test
  script:
    - CGO_ENABLED=0 go test ./... -coverprofile=coverage-report.out
    - go tool cover -html=coverage-report.out -o coverage-report.html
    # This option allows you open a browser and check results directly: go tool cover -html=coverage-report.out
    # You can combine test & cover commands: go test ./... -coverprofile=coverage-report.out && go tool cover -html=coverage-report.out
    - go tool cover -func=coverage-report.out
  artifacts:
    paths:
      - coverage-report.html
    expire_in: 1 hour
  coverage: "/\\(statements\\)\\s+\\d+.?\\d+%/"

linter:
  stage: build
  allow_failure: true
  script:
    - apk add build-base
    - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2
    - golangci-lint run --timeout 10m --verbose ./...

build:
  stage: build
  script:
    # go mod tidy : Adds missing and removes unused modules and dependencies from the go. mod file.
    # It ensures that the go. mod file accurately reflects the required dependencies of your project.
    - go mod tidy
    - go build -o bin/go-playground -v .
  artifacts:
    paths:
      - bin/go-playground
    expire_in: 1 hour

pages:
  stage: deploy
  script:
    - echo 'Cleaning old pages'
    - rm -rf public
    - ls -la
    - mkdir -p public/test-report && cp coverage-report.html public/test-report
    - echo 'Public directory content after copying files'
    - ls -la ./public
  artifacts:
    paths:
      - public
    expire_in: 1 hour
  only:
    - main

